@mixin spacing($prop, $variation, $size: null) {
    //Accepts 2 or 3 arguments
    @if($size == null) {
         $size: $variation;
         $variation: '';
    }
    
    //Setting property shorthand
    @if($prop=='m') {
        $prop: 'margin';
    } @else if($prop=='p') {
        $prop: 'padding';
    } 
    
    //Setting property
    @if($variation=='t') {
        $variation: '-top';
        #{$prop}#{$variation}: map-get($spacers, $size)!important;
    } @else if($variation=='b') {
        $variation: '-bottom';
        #{$prop}#{$variation}: map-get($spacers, $size)!important;
    } @else if($variation=='l') {
        $variation: '-left';
        #{$prop}#{$variation}: map-get($spacers, $size)!important;
    } @else if($variation=='r') {
        $variation: '-right';
        #{$prop}#{$variation}: map-get($spacers, $size)!important;
    }@else if($variation=='x') {
        #{$prop}-right: map-get($spacers, $size)!important;
        #{$prop}-left: map-get($spacers, $size)!important;
    }@else if($variation=='y') {
        #{$prop}-top: map-get($spacers, $size)!important;
        #{$prop}-bottom: map-get($spacers, $size)!important;
    }@else if($variation=='') {
        @if(typeof($size) == number) {
            #{$prop}: map-get($spacers, $size)!important;
        } @else {
            #{$prop}: map-get($spacers, nth($size, 1)) map-get($spacers, nth($size, 2)) map-get($spacers, nth($size, 3)) map-get($spacers, nth($size, 4))!important;
        }
    }
    
    
    
    
}